// Code generated by go-bindata.
// sources:
// golang/pkg/model/.DS_Store
// golang/pkg/model/database/db.go.tpl
// golang/pkg/model/database/table.go.tpl
// DO NOT EDIT!

package pkg

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _golangPkgModelDs_store = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xcd\xaa\xd3\x40\x14\x80\xcf\xe4\x46\x9d\x70\x0b\x8e\xe0\xa2\x82\x8b\x80\x0b\x37\x5d\xd4\xd6\xda\x6d\x88\xed\x4e\x50\x4c\xb1\x8b\xaa\x75\x86\x0c\x34\x12\x92\x92\x4c\xcd\xa2\x14\xea\x0b\xf8\x00\xea\xd6\x9f\xc7\x10\xf4\x21\x7c\x11\xf7\xd2\xce\x11\x43\x5b\x97\xd6\x7a\x39\x1f\x0c\x1f\xc9\xfc\x24\x33\x03\x93\x73\x02\x00\x2c\x5c\xc4\x77\x00\x04\x00\x70\xb0\x76\x3c\x38\x08\xc7\xb2\x87\x83\x66\xb6\x08\x00\x05\x12\x4a\xd0\xaa\x2a\xe7\x87\xc7\x22\x4e\x0c\xb6\xdd\xdc\x18\x24\x18\x90\xf5\xfd\x53\x69\xae\x00\xe0\x87\x9a\xa7\x49\x69\xda\xed\xef\xcc\x39\x73\x2f\x5d\xbe\xc2\x3d\xef\xbc\xe1\x35\xae\x36\x9e\x45\xb3\xbc\x8a\x8c\x34\x8b\x32\x94\xc5\x64\x73\xf5\x48\x9a\x99\x92\xc5\x54\xdc\x8c\x92\x58\x2b\x59\x8c\x93\xd8\xcc\x46\x3a\x1b\xa6\xfa\x95\xce\x1e\x16\x0f\xa4\xd1\xb6\xe9\x28\xcf\x53\x85\xdd\x46\x52\x3d\x49\x74\x35\x15\xd7\xef\xe7\x99\x91\x49\xa6\x8b\xed\xd8\x76\x8c\xa7\xe3\x24\x8b\xf3\x2a\xcc\x17\x59\x5c\x4e\x6a\x15\x9c\xdf\x0a\xe4\x97\xed\x2c\x3c\xee\x4d\x45\x73\xb9\xec\xf4\x7b\x2d\xbf\xd3\xeb\xad\x5a\xfe\xb2\xdf\x6f\xb7\xfc\xbb\xdd\x7b\xab\x95\xc7\x6f\xdc\xee\x3e\x7e\xfe\xf2\xf5\x9b\xb7\xef\xde\x7f\xf8\xf8\xe9\xf3\x57\x9c\x3b\xc3\x45\xb8\xb6\xb3\x28\xdf\x8e\xbb\x07\x04\x41\x10\xc7\x06\x8f\x3f\x7e\xfe\xaf\x5f\x84\x20\x88\x93\x63\x73\x3e\xf8\xe8\x00\xbd\xb6\x66\x58\xef\xa0\xdd\x5a\x1f\x81\xf6\xd1\x01\x7a\x6d\xcd\xb0\x9d\x83\x76\xd1\x1c\x2d\xd0\x3e\x3a\x40\xaf\xad\xf1\xd0\x62\x98\x7c\x30\x7c\x32\xc3\x0c\x85\x09\xb4\x8f\x0e\xfe\xce\xda\x10\xc4\xff\xce\x99\x95\xd8\x7c\xff\x87\x7f\xce\xff\x09\x82\xb8\xc0\x30\x77\x10\x0d\xc2\xdf\x09\xc1\x1e\x0e\x06\x02\x2f\x7e\x75\xd8\x09\x04\xa0\x16\x04\x38\xf6\x67\x61\xb3\x76\x9f\x02\x01\x82\x38\x31\x7e\x06\x00\x00\xff\xff\xe5\x46\xbb\xcd\x04\x18\x00\x00")

func golangPkgModelDs_storeBytes() ([]byte, error) {
	return bindataRead(
		_golangPkgModelDs_store,
		"golang/pkg/model/.DS_Store",
	)
}

func golangPkgModelDs_store() (*asset, error) {
	bytes, err := golangPkgModelDs_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/pkg/model/.DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1586257494, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangPkgModelDatabaseDbGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\xcf\x6e\xd4\x3c\x14\xc5\xd7\xf1\x53\xdc\x46\x9a\x2a\xf9\x54\xc5\xdf\x12\x55\x8a\x40\xd3\x54\x65\xa4\xfe\x93\xa6\x3c\x80\x93\xdc\xb8\xa6\x89\x1d\x6c\x07\x28\x51\x16\xbc\x40\x59\x20\xb1\x44\x62\xd1\x6d\x59\xb2\xa2\x7d\x19\x28\xe5\x2d\x90\x33\xe9\xb4\x19\xcd\xa2\x4b\xdf\x7b\xcf\xcf\x3e\xe7\xca\x94\xc2\x8e\xca\x11\x38\x4a\xd4\xcc\x62\x0e\xe9\x39\x70\xc5\x51\x46\x84\x52\x48\x8e\xe0\xf0\xe8\x04\x76\x93\xd9\xc9\x06\x21\x35\xcb\xce\x18\x47\x68\xdb\x46\xe6\xa8\x4b\x21\x11\xa2\xe3\x33\xde\x75\x84\x88\xaa\x56\xda\x42\x40\x3c\xbf\xa8\xac\x4f\x88\xe7\x73\x61\x4f\x9b\x34\xca\x54\x45\x8d\x28\x51\x66\x58\xa3\xa6\x3d\x9c\xd6\x67\x9c\x2a\x5d\xf9\xe3\xb1\xd7\x42\x7e\x38\x6d\x28\xef\x3b\x21\x21\x6f\x99\x76\xc4\x3c\x3d\x64\x15\x42\x0c\x7e\xdb\x46\x09\xb3\x2c\x65\x06\xbb\xce\x5d\x92\xa7\x3b\x4a\x16\x82\xc3\x7f\x4a\x57\xd1\x51\x6d\x85\x92\xc6\x95\x67\xb2\x50\x00\x8b\x72\x32\x75\x27\x07\xa4\x74\x26\x85\x4d\xa6\x70\x77\x75\xfd\xe7\xe7\x55\x9e\xfe\xfd\x7c\x7d\x7b\x71\x49\x8a\x46\x66\xb0\x68\x05\xaa\xb6\x66\x84\x0b\x5b\x02\x00\x70\x7f\x55\xec\x06\x48\xe7\x60\x7b\xd8\xb3\x2e\x7e\xfc\xfe\xf4\x25\x4f\xef\x6e\xbe\xde\x5e\x5c\xfe\xba\xf9\x76\xfb\xf1\xfb\x82\xd8\xf7\x83\xf0\xf1\x2b\xa0\x25\x9e\x28\x60\x78\xe0\x46\x0c\x52\x94\xae\xe6\x69\xb4\x8d\x96\x43\x83\x78\xdd\x30\x36\xd8\x8b\x1f\x06\x6b\x26\x45\x16\xf8\x55\x63\x2c\x08\x29\x2c\xe4\xa9\x1f\x3a\xc1\x48\xd1\xe7\x34\x57\x8d\xce\xd0\x89\x7d\xbf\xd7\xae\xed\x42\x51\xd9\x68\x5e\x6b\x21\x6d\x11\xf8\x13\xb3\x3d\x31\x2f\x6c\x56\x07\x13\x13\xd2\x89\x79\x5e\x33\x6d\xf0\x44\x54\x18\x5b\xdd\xe0\x66\x76\xea\xce\x36\x6e\x6c\xf1\xcc\xdf\x22\xde\x23\xe8\x2b\x83\x5a\xb2\x0a\xc7\xd5\x63\x66\xcc\x3b\xa5\xf3\x71\xf5\xa5\x32\x76\x5c\x49\xa6\x6e\xcb\x83\x93\x7c\xd8\xf2\x16\xa0\xd6\xb0\x1d\x03\x5f\x2c\x04\x65\xe0\x57\xe7\xe6\x4d\xe9\x6f\xad\xb3\x1a\xf6\x19\x38\xc9\xc6\x6a\x60\xa8\x75\xcf\x5e\xa2\xa3\x7d\xc5\x0f\x54\x8e\x81\xb3\x15\x8e\xc3\x3b\x60\xef\x67\x79\x89\x3b\x4a\x4a\xe3\x50\xff\x2f\xd2\xbb\x57\xba\xa5\x46\x73\xb4\x8f\xc7\x82\xb5\xe2\x70\x75\x93\xae\xeb\x6c\x3c\x01\xbd\x1c\x0b\xd6\x8a\x87\xa4\x28\xb5\xfa\x9c\x78\xce\x73\x0c\x63\xcc\xb1\x90\x3c\x78\x42\x24\x0e\x92\x35\xc6\xaa\x0a\x4a\xc5\x39\xea\xf1\x8b\x77\x25\x4b\x4b\xdc\x57\x7c\xfc\xd2\x95\xf8\x3a\xc0\xd2\xe0\xfa\x91\x82\x95\x06\x57\xd2\x9f\xa3\xdd\xef\x2f\x0b\x36\xdd\x6a\xf7\x94\xae\x16\xe7\xb6\x0b\xc9\xf2\x07\xc7\xb0\xf9\xf0\x77\xda\x64\xba\xbd\xb4\xd8\x91\x95\x2f\xd3\x11\xf2\x2f\x00\x00\xff\xff\x2f\x0b\xac\xa5\xce\x04\x00\x00")

func golangPkgModelDatabaseDbGoTplBytes() ([]byte, error) {
	return bindataRead(
		_golangPkgModelDatabaseDbGoTpl,
		"golang/pkg/model/database/db.go.tpl",
	)
}

func golangPkgModelDatabaseDbGoTpl() (*asset, error) {
	bytes, err := golangPkgModelDatabaseDbGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/pkg/model/database/db.go.tpl", size: 1230, mode: os.FileMode(420), modTime: time.Unix(1586264286, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangPkgModelDatabaseTableGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xcd\x6e\xdb\x46\x17\x5d\x8b\x4f\x71\x4d\x38\x06\x15\x18\xe4\x17\xe0\x43\x17\x0e\x84\x22\x96\x64\xd7\xa8\x23\xa7\xb6\x8c\x2c\x8a\xc2\xa6\xc8\x91\x4c\x9b\x1a\xd2\xc3\xa1\x1c\x95\x20\x90\x16\x08\x1a\x23\x76\x12\x14\x8d\xd1\xb4\x49\x10\x03\x4d\x9a\xb6\xa8\xea\x45\xd1\xa6\xf9\x7d\x19\x91\x51\x56\x7d\x85\x62\x38\x94\x4c\xf9\x4f\x14\xd2\x1f\xaf\x68\x72\xee\x3d\x3c\xe7\xde\xc3\x3b\x23\x2b\x0a\xe4\x2d\x1d\x41\x0d\x61\x44\x54\x8a\x74\xa8\x34\x81\x52\xcb\x32\x65\x41\x51\xa0\x30\x07\xa5\xb9\x32\x14\x0b\x33\xe5\x11\x41\xb0\x55\x6d\x4d\xad\x21\xf0\x3c\x17\xeb\x88\x98\x06\x46\x20\x5f\x5a\xab\xf9\xbe\x20\x18\x75\xdb\x22\x14\x24\x01\x00\x40\xac\xd6\xa9\x28\x64\x44\x6a\xd4\x11\xbb\xd6\x0c\xba\xe2\x56\x64\xcd\xaa\x2b\x8e\x61\x22\xac\x21\x1b\x11\xa5\x66\xd5\x10\x56\xec\xb5\x9a\x62\x91\xfa\x81\xb0\x55\x03\x7f\xba\xe2\x2a\xb5\x68\x25\x2b\x08\x42\x43\x25\xb0\x04\x39\x60\x90\x72\xc9\xda\x90\xb2\x82\xa0\x28\x9e\xe7\xda\x36\x22\x79\xb5\x8e\x4c\x90\x2f\x11\x44\x69\xb3\xac\x56\x4c\x54\x52\xeb\xc8\xf7\x81\xb2\xbf\x01\x61\x6a\xd0\xa6\x40\x9b\x76\xc4\xfd\xc4\x0c\x87\x12\x57\xa3\xe0\x09\x90\xf1\x3c\x20\x2a\xae\x21\x18\x35\xc6\x61\xb4\x01\x13\x39\x90\xf3\x96\xe9\xd6\xb1\x03\xbe\x2f\x64\xfa\xa0\x46\x1b\xf2\x94\x81\x4c\xdd\xf7\xc1\xf3\x46\x1b\xf2\xb4\x55\x6e\xda\x0c\x70\x99\x69\x98\x10\xb5\x28\x71\x22\x5a\x8b\x03\xcf\x7b\x9e\x51\x05\xb4\x0e\xa3\xf2\x25\x62\xd4\x55\xd2\xfc\x10\x35\x13\x40\x36\x7f\xb8\xb4\x86\x9a\xe7\x3d\x0f\x61\xdd\xf7\xa3\x8c\xd1\x86\x7c\xc1\xa5\xd6\x0c\xd6\x08\xaa\x23\x4c\xc1\xf7\x2f\x2c\x96\xe7\x96\x66\x4a\xf9\xf9\xe2\xc5\x62\xa9\xdc\x17\xcd\xf0\x1b\x72\xc9\x35\x4d\x10\x4b\x73\xa2\xef\x63\x8b\x02\x76\x4d\xf3\x20\xe6\x22\x36\xd6\x5d\xe4\xfb\x6e\x74\xed\xae\xb2\xa2\x71\xd6\x5c\x8f\x08\xab\x8e\x85\x27\xc4\xa4\x10\x71\x19\xe2\x68\x41\xc8\x2c\xe9\x15\x38\x6b\x91\xba\x5c\x98\x9c\xc1\x55\x4b\xc8\x2c\xd1\x2b\xfc\x41\x99\xa8\xd8\x51\x35\x6a\x58\x58\xf0\x59\xf7\x7a\x75\x87\xce\xee\x93\xe0\xf6\xb6\x50\x75\xb1\x06\x92\x55\x59\x85\xb3\x03\xfa\x94\x85\xde\x8d\x94\x65\x4d\x33\x70\x0d\x3c\x21\x43\x10\x75\x09\x06\xd1\xf3\xe4\x44\xb4\xc8\xdf\x57\x42\x1b\x83\xda\x1f\xb4\x1e\xb4\x5f\xdd\x08\xb6\x76\x38\x97\xc1\x19\x52\x76\x20\x57\xc6\x8b\x69\x9a\xc8\xa5\xc0\xbb\x6c\xd0\x15\xcb\xa5\x85\x8a\x94\x8d\xb2\xe4\x05\x44\x79\x25\xd9\x83\x58\x9e\x55\x59\x4d\xab\xa8\x87\x07\xfb\xda\xda\x4f\xb7\x83\xad\x6b\xc1\xed\x9f\xf4\x4a\xfb\xf5\x6e\xf8\xd9\x2f\x69\xc5\x26\xc8\xa5\x52\xad\x28\x9a\x8a\xc1\x41\x14\x74\x54\x55\x5d\x93\x42\x95\x39\xa6\xa7\x63\x6c\x00\x86\xe7\x73\x99\xbd\x1a\x40\xa7\xf5\xea\xcd\xcb\x96\x5e\xe9\xbc\x7e\x10\xde\x7c\x94\x64\x9f\xd2\x36\x89\x72\x32\x86\xba\x4a\xd5\x8a\xea\x20\xd6\x9c\x69\xb6\xd4\x2d\x3b\xb3\x71\x0e\xc6\xf6\x8d\xec\x09\x99\x4c\x61\x72\x02\xba\x19\x72\x61\x72\x5c\xc8\xec\x13\x4c\xb8\x3b\x66\xd9\x7e\x76\xe3\xcd\xe6\x0f\xc3\xb2\x4b\xe0\x48\x47\x7c\x39\xd9\xd8\x4d\x32\xfb\xac\x72\x40\xaf\x70\x02\xd3\x88\x2e\x7c\x34\x5b\xbc\x82\x34\x97\x5a\x04\x3a\x37\x7f\x0f\x6e\xed\x38\xeb\x66\xb8\xf9\x7d\x67\x77\x2b\xb8\xfb\x64\x28\x1a\xfd\x68\x52\x16\x18\x89\x24\xbe\x27\x64\x8c\x2a\x74\x69\x8c\xe4\x00\x1b\x26\x7b\x98\x30\x28\x5b\x61\xf5\xe9\x7b\xa4\x57\x18\x5d\x21\x1a\x39\xd1\xe6\xb1\x3f\xf7\x44\xd1\xf7\x05\x45\x99\xc1\x0e\x22\x14\xc2\x5b\x5f\x06\xd7\x1e\xb5\x9f\x5e\x0d\xef\xef\x86\x77\xf6\xc2\xed\xd6\x50\x02\x38\xca\xe1\x16\x33\x12\x07\xc5\x45\x52\x10\x21\x6c\xbd\xd7\xdc\x3c\x41\x2a\x45\xec\x6d\x59\xb9\x48\x88\x45\xce\x47\x21\x09\xa5\xb6\x8a\x0d\x4d\x42\x84\x64\xb9\x0b\x7a\x13\x50\x51\x16\x6d\x5d\xa5\x08\xc2\x87\x7f\x84\xdb\xad\xf6\xd3\xe7\x6f\xbf\x6a\x85\xdf\xfe\x1a\xee\xec\x0d\xa5\x81\xa3\xbc\x83\x86\x05\xb5\x31\x94\x02\xe6\x63\xb5\x81\x20\x78\xfc\x79\xf8\xe0\x9e\xbd\x16\xfc\xfc\x75\x70\xef\x49\x70\xfd\x2e\x27\xff\xe7\x8b\xad\xe0\xf6\x63\x76\x9b\xec\xcd\xce\xde\x9b\x67\x3f\x06\x2f\xef\x0c\x67\x73\xc6\xec\x5f\x14\x76\x82\xdf\x0a\xc8\x44\x14\x81\xce\x2f\x95\x26\xd8\x6b\x43\x49\xe1\xf9\x52\x16\x0c\x4c\xdf\xfb\x7f\x3a\x49\x04\x39\x6c\x16\x26\x25\xc5\x30\x4c\x54\x52\x32\x8f\x3c\x46\x66\x1c\x36\x92\x03\x76\xc4\x60\x41\xf3\x48\xb3\x88\x5e\xb2\xe8\x94\xe5\x62\x3d\x0a\xea\x2b\x06\xfb\x1c\xf7\xbf\xc8\x18\x7c\xde\xda\x70\x2e\x54\xab\x48\xa3\x48\xef\xf7\x31\x27\x35\xa0\x04\x93\xcd\xd8\xe8\xe1\xfd\xdd\xf6\xf3\xdf\x82\xeb\x0f\xdf\xde\xfd\x8e\x97\x30\x65\xbe\xb4\xb1\x82\x08\x8a\x37\xf1\x71\x50\x49\xcd\x01\x59\x96\x0d\x4c\x11\xa9\xaa\x1a\xf2\xfc\x63\xaa\xdb\x1b\xd8\xce\xba\xc9\xee\xc5\x42\x71\xb6\x58\x2e\xc2\xd4\xfc\xdc\x45\x58\xee\x3f\x02\x2c\x83\x18\x15\x96\xbf\x6b\x24\x07\xa2\x18\xd5\x87\xa5\xe6\xa0\x5a\xa7\xf2\x82\x4d\x0c\x4c\xab\x92\x78\xc6\x89\xa3\xce\x38\xe2\x38\x38\xeb\xe6\x38\xbf\x8f\xdc\x74\x64\xf7\x58\x73\xa5\x28\x90\x91\x97\x65\xf9\xbf\x6e\xe2\x49\x8e\x9f\x46\x74\x60\x4b\x0e\x06\x74\x31\x7c\xbf\x6f\xaa\xf1\x6d\x26\xb8\xfa\x82\xf7\xfb\xdd\x90\x25\xcf\xeb\x7f\x13\x37\xc4\x50\xe7\xab\x14\x07\x8a\x93\x1d\xb4\x50\x9c\x2d\xe6\xcb\xe0\x79\xfc\x6c\xbb\x10\x51\x98\x35\x1c\xea\xfb\xc7\xd8\xea\xf2\x07\xc5\xf9\x62\xf4\x38\x49\x7e\x39\xf7\x3e\x98\x46\xdd\xa0\x70\x4e\x3c\x72\x86\xcd\xab\x1b\xdc\x31\x07\x12\xb3\xf2\x82\xa6\xe2\x93\xa6\x5b\x0c\x96\x3b\xd9\x31\xb1\x3d\xb0\x61\x72\xc7\x1c\x18\x8a\x03\x8e\x96\xbd\x21\x90\xca\x2f\x53\x06\x71\x68\xdf\x14\xe0\xc6\xe0\x5b\x44\xa7\xb5\xd7\xdb\x1f\x52\x62\xa5\x99\x08\xa7\xdb\x15\xc3\x0c\x1b\xee\xa0\xa3\x86\xcd\x31\x09\x5d\x63\x45\xf1\x47\x6f\x91\x3d\x7b\x75\x07\xd2\xa9\xb0\x55\x2a\x37\x5d\x8e\x8a\x76\xd8\x4d\xe1\xe6\xd5\xf0\xde\xe6\x70\x6e\x8a\xb0\xd2\xb8\xe9\xe3\x4f\x52\xfa\xc9\x61\x65\x1e\x1c\x7d\x7a\x2d\x95\xde\x2c\x63\x4c\xee\x3f\x6b\x97\xaa\x45\x60\x69\x1c\xe2\xef\x94\xff\xb7\x25\x2a\x32\xcb\x3e\xe4\xa5\xbe\x1f\x13\x4e\x5a\x3f\xe5\x2d\x17\xd3\xf8\x17\x51\xb8\xf5\x45\xd0\xfa\x86\x7b\xa8\xb3\xbb\x15\xde\xd9\x4b\xeb\xa4\x08\xe5\xdd\x4f\x2a\x0d\x95\x80\x16\x11\x8a\xe2\x0e\xf9\x21\x3f\xb7\x58\x2a\x4b\xe7\xb2\xa7\xc0\x03\x5c\xf1\x58\xc4\xf6\x6f\x71\xc1\xff\x8e\xf6\x40\xbc\x1a\xbd\x87\xf5\xf4\xaf\x00\x00\x00\xff\xff\x82\xa9\x14\x95\x93\x14\x00\x00")

func golangPkgModelDatabaseTableGoTplBytes() ([]byte, error) {
	return bindataRead(
		_golangPkgModelDatabaseTableGoTpl,
		"golang/pkg/model/database/table.go.tpl",
	)
}

func golangPkgModelDatabaseTableGoTpl() (*asset, error) {
	bytes, err := golangPkgModelDatabaseTableGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang/pkg/model/database/table.go.tpl", size: 5267, mode: os.FileMode(420), modTime: time.Unix(1586263633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"golang/pkg/model/.DS_Store": golangPkgModelDs_store,
	"golang/pkg/model/database/db.go.tpl": golangPkgModelDatabaseDbGoTpl,
	"golang/pkg/model/database/table.go.tpl": golangPkgModelDatabaseTableGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"golang": &bintree{nil, map[string]*bintree{
		"pkg": &bintree{nil, map[string]*bintree{
			"model": &bintree{nil, map[string]*bintree{
				".DS_Store": &bintree{golangPkgModelDs_store, map[string]*bintree{}},
				"database": &bintree{nil, map[string]*bintree{
					"db.go.tpl": &bintree{golangPkgModelDatabaseDbGoTpl, map[string]*bintree{}},
					"table.go.tpl": &bintree{golangPkgModelDatabaseTableGoTpl, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

